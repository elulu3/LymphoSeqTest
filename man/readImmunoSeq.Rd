% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/readImmunoSeq.R
\name{readImmunoSeq}
\alias{readImmunoSeq}
\alias{getStandard}
\alias{readFiles}
\alias{iReceptorFormat}
\title{Read ImmunoSeq files}
\usage{
readImmunoSeq(path, recursive = FALSE)

getStandard(clone_file, airr_fields, matching_fields)

readFiles(clone_file, empty_airr_frame, matching_fields, progress)

iReceptorFormat(clone_frame)
}
\arguments{
\item{path}{Path to the directory containing tab-delimited files.  Only
files with the extension .tsv are imported.  The names of the data frames are
the same as names of the files.}

\item{clone_file}{.tsv file containing results from AIRRSeq pipeline}

\item{airr_fields}{A character vector of MiAIRR headers}

\item{clone_frame}{An AIRR compliant tibble}
}
\value{
Returns a tibble with MiAIRR headers and repertoire_id

Tibble of given data with MiAIRR fields

Tibble in MiAIRR format

Tibble in iReceptor format
}
\description{
Imports tab-separated value (.tsv) files exported by the Adaptive
Biotechnologies ImmunoSEQ analyzer, BGI IR-SEQ, MiXCR and stores
them as MiAIRR compliant tibble.
}
\section{Get standard headers}{


Retrives MiAIRR standard compliant fields from the clone files
}

\section{Read clone file from path}{


Given the path to a single AIRRSeq clone file, generate MiAIRR compliant tibble.
}

\section{Get iReceptor standard format}{


Returns a tibble that is compliant with the iReceptor repertoire format.
}

\examples{
file.path <- system.file("extdata", "TCRB_sequencing", package = "LymphoSeqTest")

study_table <- readImmunoSeq(path = file.path,
                             recursive = FALSE)
}
