% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/searchSeq.R
\name{searchSeq}
\alias{searchSeq}
\alias{findSeq}
\title{Search for a sequence}
\usage{
searchSeq(
  study_table,
  sequence,
  seq_type = "junction",
  edit_distance = 0,
  match = "global"
)

findSeq(sequence, query_list, edit_distance, seq_type, match)
}
\arguments{
\item{study_table}{A tibble generated by the LymphoSeq2 functions readImmunoSeq
or productiveSeq.  "junction_aa" or "junction", "duplicate_frequency", and
"duplicate_count" are required columns.}

\item{sequence}{A character vector of one ore more amino acid or junction
CDR3 sequences to search.}

\item{seq_type}{A character vector specifying the type of sequence(s) to be
searched.  Available options are "junction_aa" or "junction".}

\item{edit_distance}{An integer giving the minimum edit distance that the
sequence must be less than or equal to.  See details below.}

\item{match}{A string indicating the type of sequence matching to perform.
Acceptable values are "global" and "partial". See details below.}
}
\value{
Returns the rows for every instance in the list of data frames where
the searched sequence(s) appeared.
}
\description{
Search for one or more amino acid or junction CDR3 sequences in a study tibble.
}
\details{
An exact partial match means the searched sequence is contained within
target sequence.  An exact global match means the searched sequence is identical to
the target sequence.

Edit distance is a way of quantifying how dissimilar two sequences
are to one another by counting the minimum number of operations required to
transform one sequence into the other.  For example, an edit distance of 0
means the sequences are identical and an edit distance of 1 indicates that
the sequences different by a single amino acid or junction.
}
\section{Functions}{
\itemize{
\item \code{findSeq}: Find all sequences below edit distance threshold from query list
}}

\examples{
file_path <- system.file("extdata", "TCRB_sequencing", package = "LymphoSeqTest")
stable <- readImmunoSeq(path = file_path)
aa1 <- "CASSPVSNEQFF"
aa2 <- "CASSQEVPPYQAFF"
searchSeq(study_table = stable, 
          sequence = aa1, 
          seq_type = "junction_aa", 
          edit_distance = 0)
searchSeq(study_table = stable, 
          sequence = c(aa1, aa2), 
          seq_type = "junction_aa", 
          edit_distance = 0)
searchSeq(study_table = stable, 
          sequence = aa1, 
          seq_type = "junction_aa", 
          edit_distance = 1)
nt <- "CTGATTCTGGAGTCCGCCAGCACCAACCAGACATCTATGTACCTCTGTGCCAGCAGTCCGGTAAGCAATGAGCAGTTCTTCGGGCCA"
searchSeq(study_table = stable,
          sequence = nt,
          seq_type = "junction",
          edit_distance = 3)
searchSeq(study_table = stable,
          sequence = "CASSPVS",
          seq_type = "junction_aa",
          edit_distance = 0)
searchSeq(study_table = study_table,
          sequence = nt,
          seq_type = "junction",
          edit_distance = 0)
}
